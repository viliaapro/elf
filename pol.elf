%% Negative diagonal

%abbrev par'	= [C : corr] [X] [Y] C X Y Y X.
%abbrev diag'	= [C] par' C X Y.

%% Negation

neg		: corr -> corr -> type. %name neg Neg.

neg_intr	: ({f} {g} inv P f g -> inv P g f -> in (diag' N f g))
		   -> neg P N.

neg_elim	: neg P N -> inv P F G -> inv P G F -> in (diag' N F G).

%% Sign

sign		: corr -> corr -> corr -> type. %name sign Sgn.

sign_intr	: ({f} {g} {f'} {g'}
		     in (diag A f f')
		     -> in (diag B g g')
		     -> in (diag C (f ; g) (f' ; g')))
		   -> ({f} {g} {f'} {g'}
			 in (diag A f f')
			 -> in (diag C (f ; g) (f' ; g'))
			 -> in (diag B g g'))
		   -> ({f} {g} {f'} {g'}
			 in (diag B g g')
			 -> in (diag C (f ; g) (f' ; g'))
			 -> in (diag A f f'))
		   -> sign A B C.

sign_elim_0	: sign A B C
		   -> in (diag A F F')
		   -> in (diag B G G')
		   -> in (diag C (F ; G) (F' ; G')).

sign_elim_1	: sign A B C
		   -> in (diag A F F')
		   -> in (diag C (F ; G) (F' ; G'))
		   -> in (diag B G G').

sign_elim_2	: sign A B C
		   -> in (diag B G G')
		   -> in (diag C (F ; G) (F' ; G'))
		   -> in (diag A F F').

%% Polarity

pol		: corr -> corr -> type. %name pol Pol.

pol_intr	: sign P P P
		   -> sign P N N
		   -> sign N P N
		   -> sign N N P
		   -> pol P N.

pol_elim_0	: pol P N -> sign P P P.
pol_elim_1	: pol P N -> sign P N N.
pol_elim_2	: pol P N -> sign N P N.
pol_elim_3	: pol P N -> sign N N P.